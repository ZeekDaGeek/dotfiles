### Set up the prompt

# Check if zplug is installed
if [[ ! -d $ZPLUG_HOME ]]; then
    git clone https://github.com/zplug/zplug "$ZPLUG_HOME/"
    source "$ZPLUG_HOME/init.zsh" && zplug update
    zplug "zplug/zplug", hook-build:"zplug --self-manage"
fi
source "$ZPLUG_HOME/init.zsh"

# =============================================================================
#                                    General
# =============================================================================
export SHELL="/bin/zsh"


# Enable colors:
autoload -U colors && colors

# Prompt defined further down now.
#autoload -Uz promptinit
#promptinit
#prompt adam1

# Bash Prompt: PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#PS1="%B[%{$fg[green]%}%n@%M%{$fg[white]%}:%{$fg[blue]%}%~%{$reset_color%}]$%b "

setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt share_history

# Use vim keybindings
bindkey -v

bindkey -v '^?' backward-delete-char # Allow for backspacing past insert start point.

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=$HISTSIZE
HISTFILE=~/.config/zsh/.zsh_history

# zsh by default is missing a lot of standard keybind for home/end, etc.
if [[ "$TERM" != emacs ]]; then
[[ -z "$terminfo[kdch1]" ]] || bindkey -M emacs "$terminfo[kdch1]" delete-char
[[ -z "$terminfo[khome]" ]] || bindkey -M emacs "$terminfo[khome]" beginning-of-line
[[ -z "$terminfo[kend]" ]] || bindkey -M emacs "$terminfo[kend]" end-of-line
[[ -z "$terminfo[kich1]" ]] || bindkey -M emacs "$terminfo[kich1]" overwrite-mode
[[ -z "$terminfo[kdch1]" ]] || bindkey -M vicmd "$terminfo[kdch1]" vi-delete-char
[[ -z "$terminfo[khome]" ]] || bindkey -M vicmd "$terminfo[khome]" vi-beginning-of-line
[[ -z "$terminfo[kend]" ]] || bindkey -M vicmd "$terminfo[kend]" vi-end-of-line
[[ -z "$terminfo[kich1]" ]] || bindkey -M vicmd "$terminfo[kich1]" overwrite-mode

[[ -z "$terminfo[cuu1]" ]] || bindkey -M viins "$terminfo[cuu1]" vi-up-line-or-history
[[ -z "$terminfo[cuf1]" ]] || bindkey -M viins "$terminfo[cuf1]" vi-forward-char
[[ -z "$terminfo[kcuu1]" ]] || bindkey -M viins "$terminfo[kcuu1]" vi-up-line-or-history
[[ -z "$terminfo[kcud1]" ]] || bindkey -M viins "$terminfo[kcud1]" vi-down-line-or-history
[[ -z "$terminfo[kcuf1]" ]] || bindkey -M viins "$terminfo[kcuf1]" vi-forward-char
[[ -z "$terminfo[kcub1]" ]] || bindkey -M viins "$terminfo[kcub1]" vi-backward-char

# ncurses fogyatekos
#[[ "$terminfo[kcuu1]" == "^[O"* ]] && bindkey -M viins "${terminfo[kcuu1]/O/[}" vi-up-line-or-history
#[[ "$terminfo[kcud1]" == "^[O"* ]] && bindkey -M viins "${terminfo[kcud1]/O/[}" vi-down-line-or-history
#[[ "$terminfo[kcuf1]" == "^[O"* ]] && bindkey -M viins "${terminfo[kcuf1]/O/[}" vi-forward-char
#[[ "$terminfo[kcub1]" == "^[O"* ]] && bindkey -M viins "${terminfo[kcub1]/O/[}" vi-backward-char
#[[ "$terminfo[khome]" == "^[O"* ]] && bindkey -M viins "${terminfo[khome]/O/[}" beginning-of-line
#[[ "$terminfo[kend]" == "^[O"* ]] && bindkey -M viins "${terminfo[kend]/O/[}" end-of-line
#[[ "$terminfo[khome]" == "^[O"* ]] && bindkey -M emacs "${terminfo[khome]/O/[}" beginning-of-line
#[[ "$terminfo[kend]" == "^[O"* ]] && bindkey -M emacs "${terminfo[kend]/O/[}" end-of-line
fi



# =============================================================================
#                                    Plugins
# =============================================================================
# Of note but not installed:
#   https://github.com/geometry-zsh/geometry
autoload -Uz promptinit && promptinit

# theme
zplug "chrissicool/zsh-256color"
#zplug "robbyrussell/oh-my-zsh"
zplug "themes/clean", from:oh-my-zsh, as:theme
#zplug "~/.config/zsh/clean-custom.zsh-theme", from:local, as:theme, at:next
zplug "zpm-zsh/dircolors-material"

zplug "momo-lab/zsh-abbrev-alias"               # create abbrivations that get auto expanded vim style
zplug "zpm-zsh/figures"                         # unicode symbols in variables for easy access

zplug "hlissner/zsh-autopair", defer:2          # smart pairing for quotes and braces
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-syntax-highlighting"

zplug "zsh-users/zsh-history-substring-search"  # search for similar commands with up/down

zplug "vifon/deer", use:deer
zle -N deer
bindkey '\ek' deer

# Keybinds for zsh-history-substring-search
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down



# =============================================================================
#                                 Completions
# =============================================================================
# Use modern completion system
#autoload -Uz compinit && compinit

#zstyle ':completion:*' auto-description 'specify: %d'
#zstyle ':completion:*' completer _expand _complete _correct _approximate
#zstyle ':completion:*' format 'Completing %d'
#zstyle ':completion:*' group-name ''
#zstyle ':completion:*' menu select=2
#eval "$(dircolors -b)"
#zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*' list-colors ''
#zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
#zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
#zstyle ':completion:*' menu select=long
#zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
#zstyle ':completion:*' use-compctl false
#zstyle ':completion:*' verbose true
#
#zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
#zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# =============================================================================
#                                     Start
# =============================================================================
# zplug check returns true if all packages are installed
# Therefore, when it returns false, run zplug install
if ! zplug check; then
    zplug install
fi

# source plugins and add commands to the PATH
zplug load

source ~/.config/zsh/clean-custom.zsh-theme

# fzf keybindings
source /usr/share/doc/fzf/examples/key-bindings.zsh

# Remove autopair spaces
unset 'AUTOPAIR_PAIRS[ ]'

# Load aliases
source "$HOME/.config/aliases/general"

# Load abbreviations
source "$HOME/.config/abbr/general.zsh"

